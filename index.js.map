{"version":3,"file":"index.js","sources":["../src/js/constants.js","../src/js/local-storage-api.js","../src/js/data.js","../src/js/refs.js","../src/js/render-tasks.js","../src/js/handlers.js","../src/main.js"],"sourcesContent":["export const STORAGE_KEYS = {\n  THEME: 'theme',\n  TASKS: 'tasks',\n};\n","export function saveToLocalStorage(key, value) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport function loadFromLocalStorage(key) {\n  const saved = localStorage.getItem(key);\n  try {\n    return JSON.parse(saved);\n  } catch (error) {\n    console.log(error);\n    return saved;\n  }\n}\n\nexport function removeFromLocalStorage(key) {\n  localStorage.removeItem(key);\n}\n","import { STORAGE_KEYS } from './constants';\nimport { loadFromLocalStorage } from './local-storage-api';\n\nexport const tasks = loadFromLocalStorage(STORAGE_KEYS.TASKS) || [];\n","export const refs = {\n  tasksList: document.querySelector('.tasks-list'),\n  headerForm: document.querySelector('.header-form')\n};\n\n","import { refs } from './refs';\n\nexport function renderTasksList(tasks) {\n  const markup = tasks.map(({id, taskName, taskDescription}) => {\n    return `<li class=\"task-list-item\">\n        <button class=\"task-list-item-btn\" data-id=\"${id}\">Delete</button>\n        <h3>${taskName}</h3>\n        <p>${taskDescription}</p>\n      </li>`;\n  }).join('');\n  refs.tasksList.innerHTML = markup;\n}\n\nexport function clearTasksList() {\n  refs.tasksList.innerHTML = '';\n}\n","import { STORAGE_KEYS } from './constants';\nimport { tasks } from './data';\nimport { saveToLocalStorage } from './local-storage-api';\nimport { renderTasksList } from './render-tasks';\n\nexport function onSubmit(event) {\n  event.preventDefault();\n\n  const { taskName, taskDescription } = event.target.elements;\n\n  const titleValue = taskName.value.trim();\n  const descriptionValue = taskDescription.value.trim();\n\n  if (!titleValue || !descriptionValue) {\n    alert('Error');\n    return;\n  }\n\n  const task = {\n    taskName: titleValue,\n    taskDescription: descriptionValue,\n    id: crypto.randomUUID(),\n  };\n\n  tasks.push(task);\n\n  saveToLocalStorage(STORAGE_KEYS.TASKS, tasks);\n  renderTasksList(tasks);\n  event.target.reset();\n}\n\nexport function onDOMContentLoaded() {\n  renderTasksList(tasks);\n}\n","import { onDOMContentLoaded, onSubmit } from './js/handlers';\nimport { refs } from './js/refs';\n\ndocument.addEventListener('DOMContentLoaded', onDOMContentLoaded);\nrefs.headerForm.addEventListener('submit', onSubmit);\n"],"names":["STORAGE_KEYS","saveToLocalStorage","key","value","loadFromLocalStorage","saved","error","tasks","refs","renderTasksList","markup","id","taskName","taskDescription","onSubmit","event","titleValue","descriptionValue","task","onDOMContentLoaded"],"mappings":"ssBAAO,MAAMA,EAAe,CAC1B,MAAO,QACP,MAAO,OACT,ECHO,SAASC,EAAmBC,EAAKC,EAAO,CAC7C,aAAa,QAAQD,EAAK,KAAK,UAAUC,CAAK,CAAC,CACjD,CAEO,SAASC,EAAqBF,EAAK,CACxC,MAAMG,EAAQ,aAAa,QAAQH,CAAG,EACtC,GAAI,CACF,OAAO,KAAK,MAAMG,CAAK,CACxB,OAAQC,EAAO,CACd,eAAQ,IAAIA,CAAK,EACVD,CACR,CACH,CCTO,MAAME,EAAQH,EAAqBJ,EAAa,KAAK,GAAK,CAAE,ECHtDQ,EAAO,CAClB,UAAW,SAAS,cAAc,aAAa,EAC/C,WAAY,SAAS,cAAc,cAAc,CACnD,ECDO,SAASC,EAAgBF,EAAO,CACrC,MAAMG,EAASH,EAAM,IAAI,CAAC,CAAC,GAAAI,EAAI,SAAAC,EAAU,gBAAAC,CAAe,IAC/C;AAAA,sDAC2CF,CAAE;AAAA,cAC1CC,CAAQ;AAAA,aACTC,CAAe;AAAA,YAEzB,EAAE,KAAK,EAAE,EACVL,EAAK,UAAU,UAAYE,CAC7B,CCNO,SAASI,EAASC,EAAO,CAC9BA,EAAM,eAAc,EAEpB,KAAM,CAAE,SAAAH,EAAU,gBAAAC,CAAe,EAAKE,EAAM,OAAO,SAE7CC,EAAaJ,EAAS,MAAM,KAAI,EAChCK,EAAmBJ,EAAgB,MAAM,KAAI,EAEnD,GAAI,CAACG,GAAc,CAACC,EAAkB,CACpC,MAAM,OAAO,EACb,MACD,CAED,MAAMC,EAAO,CACX,SAAUF,EACV,gBAAiBC,EACjB,GAAI,OAAO,WAAY,CAC3B,EAEEV,EAAM,KAAKW,CAAI,EAEfjB,EAAmBD,EAAa,MAAOO,CAAK,EAC5CE,EAAgBF,CAAK,EACrBQ,EAAM,OAAO,OACf,CAEO,SAASI,GAAqB,CACnCV,EAAgBF,CAAK,CACvB,CC9BA,SAAS,iBAAiB,mBAAoBY,CAAkB,EAChEX,EAAK,WAAW,iBAAiB,SAAUM,CAAQ"}