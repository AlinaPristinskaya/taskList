(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const a of t.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function s(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function n(e){if(e.ep)return;e.ep=!0;const t=s(e);fetch(e.href,t)}})();const c={THEME:"theme",TASKS:"tasks"};function d(o,r){localStorage.setItem(o,JSON.stringify(r))}function f(o){const r=localStorage.getItem(o);try{return JSON.parse(r)}catch(s){return console.log(s),r}}const i=f(c.TASKS)||[],l={tasksList:document.querySelector(".tasks-list"),headerForm:document.querySelector(".header-form")};function u(o){const r=o.map(({id:s,taskName:n,taskDescription:e})=>`<li class="task-list-item">
        <button class="task-list-item-btn" data-id="${s}">Delete</button>
        <h3>${n}</h3>
        <p>${e}</p>
      </li>`).join("");l.tasksList.innerHTML=r}function m(o){o.preventDefault();const{taskName:r,taskDescription:s}=o.target.elements,n=r.value.trim(),e=s.value.trim();if(!n||!e){alert("Error");return}const t={taskName:n,taskDescription:e,id:crypto.randomUUID()};i.push(t),d(c.TASKS,i),u(i),o.target.reset()}function p(){u(i)}document.addEventListener("DOMContentLoaded",p);l.headerForm.addEventListener("submit",m);
//# sourceMappingURL=index.js.map
